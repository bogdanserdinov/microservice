// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package repository

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type TxStatus string

const (
	TxStatusPending TxStatus = "pending"
	TxStatusSuccess TxStatus = "success"
	TxStatusFailed  TxStatus = "failed"
)

func (e *TxStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TxStatus(s)
	case string:
		*e = TxStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for TxStatus: %T", src)
	}
	return nil
}

type NullTxStatus struct {
	TxStatus TxStatus
	Valid    bool // Valid is true if TxStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTxStatus) Scan(value interface{}) error {
	if value == nil {
		ns.TxStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TxStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTxStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TxStatus), nil
}

type Dummy struct {
	ID          uuid.UUID
	Status      TxStatus
	Description string
	UpdatedAt   sql.NullTime
	CreatedAt   time.Time
}
